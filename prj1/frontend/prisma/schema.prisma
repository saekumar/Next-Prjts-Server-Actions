generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Blog {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  description String
  title       String
  userId      String           @db.ObjectId
  createdat   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  user        User             @relation(fields: [userId], references: [id])
  category    BlogOnCategory[]

  @@map("blogs")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  confirmPassword String
  email           String   @unique(map: "email")
  name            String
  password        String
  username        String   @unique(map: "username")
  profile         Profile?
  blogs           Blog[]

  @@unique([username, email])
  @@map("users")
}

model Profile {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  bio    String
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Category {
  id    String           @id @default(auto()) @map("_id") @db.ObjectId
  name  String           @unique
  blogs BlogOnCategory[]

  @@map("categories")
}

model BlogOnCategory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  blogId     String   @map("blog_id") @db.ObjectId
  categoryId String   @map("category_id") @db.ObjectId
  blog       Blog     @relation(fields: [blogId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@unique([blogId, categoryId])
  @@map("blog_on_categories")
}
